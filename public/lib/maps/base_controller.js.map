{"version":3,"sources":["base_controller.coffee"],"names":[],"mappings":"AAAA,IAAA;;AAAA,MAAA,GAAS,OAAA,CAAQ,aAAR;;AACT,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,aAAA,GAAgB,OAAA,CAAQ,wBAAR;;AAEV;EACS,oBAAC,IAAD,EAAO,IAAP,EAAa,MAAb;AACX,QAAA;IAAA,IAAC,CAAA,IAAD,GAAQ;IACR,IAAC,CAAA,OAAD,GAAW;IACX,IAAC,CAAA,YAAD,GAAgB;IAChB,IAAC,CAAA,UAAD,GAAc;IACd,IAAC,CAAA,MAAD,GAAU;IACV,IAAC,CAAA,IAAD,GAAQ;IACR,IAAC,CAAA,IAAD,GAAQ,IAAI,CAAC,OAAL,CAAa,MAAb,EAAqB,EAArB;IACR,IAAC,CAAA,OAAD,GAAW;IACX,IAAA,GAAO;AACP,SAAA,sBAAA;MACE,GAAA,GAAM,MAAA,CAAO,KAAP;MACN,WAAA,GAAc,aAAc,CAAA,KAAA;MAC5B,IAAG,WAAY,CAAA,IAAC,CAAA,MAAD,CAAZ,IAAyB,GAAG,CAAC,IAAJ,CAAS,GAAA,GAAM,IAAC,CAAA,IAAhB,CAA5B;QACE,WAAY,CAAA,IAAC,CAAA,MAAD,CAAQ,CAAC,OAArB,CAA6B,SAAC,CAAD;iBAC3B,IAAI,CAAC,OAAO,CAAC,IAAb,CAAkB,OAAA,CAAQ,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,KAAK,CAAC,OAAvB,EAAgC,CAAhC,CAAR,CAAlB;QAD2B,CAA7B,EADF;;AAHF;IAMA,IAAC,CAAA,WAAD,GAAe,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX;MACb,OAAO,CAAC,GAAR,CAAa,GAAG,CAAC,MAAjB,EAAyB,IAAA,GAAO,OAAhC,EAAwC,IAAI,CAAC,IAAL,GAAY,OAApD,EAA6D,GAAG,CAAC,QAAjE;aACA,GAAG,CAAC,MAAJ,CAAW,IAAA,GAAO,OAAlB,EAA2B,GAAG,CAAC,QAA/B;IAFa;IAIf,IAAC,CAAA,SAAD,GAAa,IAAI,CAAC,IAAL,CAAU,IAAV;EApBF;;uBAsBb,SAAA,GAAW,SAAA;WAET,IAAC,CAAA,OAAO,CAAC,MAAT,CAAgB,CAAC,IAAC,CAAA,SAAF,CAAhB,CAA6B,CAAC,MAA9B,CAAqC,IAAC,CAAA,YAAtC;EAFS;;uBAGX,UAAA,GAAY,SAAC,OAAD;AACV,QAAA;IAAA,IAAA,GAAO;WACP,OAAO,CAAC,OAAR,CAAgB,SAAC,WAAD;aACd,IAAI,CAAC,OAAO,CAAC,IAAb,CAAkB,OAAA,CAAQ,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,SAAjB,EAA4B,MAAM,CAAC,KAAK,CAAC,OAAzC,EAAkD,WAAlD,CAAR,CAAlB;IADc,CAAhB;EAFU;;uBAIZ,gBAAA,GAAkB,SAAC,OAAD;AAChB,QAAA;IAAA,IAAA,GAAO;WACP,OAAO,CAAC,OAAR,CAAgB,SAAC,WAAD;aACd,IAAI,CAAC,YAAY,CAAC,IAAlB,CAAuB,OAAA,CAAQ,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,SAAjB,EAA4B,MAAM,CAAC,KAAK,CAAC,OAAzC,EAAkD,WAAlD,CAAR,CAAvB;IADc,CAAhB;EAFgB;;uBAIlB,MAAA,GAAQ,SAAC,IAAD;WACN,IAAC,CAAA,OAAD,GAAW;EADL;;;;;;AAGV,MAAM,CAAC,OAAP,GACE","file":"base_controller.js","sourceRoot":"/source/","sourcesContent":["config = require './../config'\npath = require 'path'\nfiltersConfig = require './../config/filters.js'\n\nclass Controller\n  constructor: (func, path, method) ->\n    @func = func\n    @filters = []\n    @afterFilters = []\n    @mainRounte = null\n    @method = method\n    @path = path\n    @name = path.replace(/.*\\//, \"\")\n    @newName = null\n    self = this\n    for route of filtersConfig\n      reg = RegExp route\n      routeConfig = filtersConfig[route]\n      if routeConfig[@method] and reg.test('/' + @path)\n        routeConfig[@method].forEach (f) ->\n          self.filters.push require(path.join(config.route.filters, f))\n    @renderRoute = (req, res, next) ->\n      console.log  res.render, path + '.jade',self.name + '.jade', req.sendData\n      res.render(path + '.jade', req.sendData)\n\n    @mainRoute = func.call @\n\n  getRoutes: () ->\n   # @filters.concat([@mainRoute]).concat(@afterFilters).concat [@renderRoute]\n    @filters.concat([@mainRoute]).concat(@afterFilters)\n  useFilters: (filters) ->\n    self = @\n    filters.forEach (filter_path)->\n      self.filters.push require(path.join(config.base_path, config.route.filters, filter_path))\n  userAfterFilters: (filters) ->\n    self = @\n    filters.forEach (filter_path)->\n      self.afterFilters.push require(path.join(config.base_path, config.route.filters, filter_path))\n  rename: (name) ->\n    @newName = name\n\nmodule.exports =\n  Controller\n\n\n\n\n\n\n\n"]}