{"version":3,"sources":["route_load.coffee"],"names":[],"mappings":"AAAA,IAAA;;AAAA,OAAA,GAAU,OAAO,CAAC,GAAG,CAAC;;AACtB,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,OAAA,GAAU,OAAA,CAAQ,SAAR;;AACV,EAAA,GAAK,OAAA,CAAQ,IAAR;;AACL,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,cAAA,GAAiB,OAAA,CAAQ,mBAAR;;AACjB,OAAO,CAAC,KAAR,GAAgB,SAAC,GAAD,EAAM,KAAN;AACd,MAAA;EAAA,KAAA,GAAQ,KAAA,IAAS;EAEjB,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,OAAnB,CAAjB;EACA,GAAG,CAAC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;EACA,OAAA,GAAU,OAAA,GAAU,CAAC,KAAK,CAAC,WAAN,IAAqB,cAAtB;EACpB,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,OAAtB;SACA,IAAI,CAAC,IAAL,CAAU,OAAA,GAAU,oBAApB,CAAyC,CAAC,OAA1C,CAAkD,SAAC,IAAD;AAChD,QAAA;IAAA,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,IAApB;IACA,IAAA,GAAO,IAAI,CAAC,OAAL,CAAa,sBAAb,EAAoC,EAApC;IAEP,MAAA,GAAS,OAAA,CAAQ,IAAR;IACT,MAAA,GAAS,OAAO,MAAP,KAAiB;IAC1B,IAAwC,CAAI,MAA5C;MAAI,IAAA,KAAA,CAAM,yBAAN,EAAJ;;IACA,IAAA,GAAO,IAAI,CAAC,OAAL,CAAa,OAAO,CAAC,OAAR,CAAgB,KAAhB,EAAsB,EAAtB,CAAb,EAAuC,EAAvC,CACH,CAAC,OADE,CACM,gBADN,EACwB,EADxB;IAEP,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA;SAAA,WAAA;MACE,CAAA,GAAI,IAAA,GAAO;MACX,IAAiC,CAAA,KAAK,GAAtC;QAAA,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,EAAjB,EAAJ;;MACA,CAAA,GAAI,MAAO,CAAA,CAAA;mBACX,OAAO,CAAC,OAAR,CAAgB,SAAC,MAAD;AACd,YAAA;QAAA,UAAA,GAAa,CAAE,CAAA,MAAA;QACf,IAAG,UAAH;UACE,UAAA,GAAiB,IAAA,cAAA,CAAe,UAAf,EAA2B,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAA3B,EAAiD,MAAjD;UACjB,IAAG,UAAU,CAAC,OAAd;YACE,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,UAAU,CAAC,IAAX,CAAgB,UAAU,CAAC,OAA3B,CAAV,EADN;;UAEA,OAAO,CAAC,GAAR,CAAY,QAAA,GAAW,MAAX,GAAoB,GAApB,GAA0B,CAAtC;UACA,OAAO,CAAC,GAAR,CAAY,CAAC,CAAD,CAAG,CAAC,MAAJ,CAAW,UAAU,CAAC,SAAX,CAAA,CAAX,CAAZ;iBACA,GAAI,CAAA,MAAA,CAAO,CAAC,KAAZ,CAAkB,GAAlB,EAAuB,CAAC,CAAD,CAAG,CAAC,MAAJ,CAAW,UAAU,CAAC,SAAX,CAAA,CAAX,CAAvB,EANF;;MAFc,CAAhB;AAJF;;EAVgD,CAAlD;AAPc","file":"route_load.js","sourceRoot":"/source/","sourcesContent":["approot = process.env.PWD\nglob = require 'glob'\nmethods = require 'methods'\nfs = require 'fs'\npath = require 'path'\nBaseController = require './base_controller'\nexports.route = (app, paths) ->\n  paths = paths || {}\n#  app.set('view', approot, paths.template)\n  app.set('views', path.join(approot, 'views'));\n  app.set('view engine', 'jade');\n  ctrlDir = approot + (paths.controllers || '/controllers')\n  console.log \"ctrDir\", ctrlDir\n  glob.sync(ctrlDir + '/**/*.+(coffee|js)').forEach (file) ->\n    console.log \"file\", file\n    file = file.replace(/\\/index.(js|coffee)$/,'')\n\n    router = require file\n    single = typeof router == 'function'\n    new Error(\"router not  is function\") if not single\n    path = file.replace(ctrlDir.replace(/\\/$/,''),'')\n        .replace(/\\.(coffee|js)$/, '')\n    console.log path\n    for i of router\n      p = path + i\n      p = p.replace(/\\/$/, '')  unless p == '/'\n      r = router[i]\n      methods.forEach (method) ->\n        eachRouter = r[method]\n        if eachRouter\n          controller = new BaseController(eachRouter, p.replace(/^\\//, ''), method)\n          if controller.newName\n            p = p.replace controller.name controller.newName\n          console.log \"route:\" + method + ':' + p\n          console.log [p].concat(controller.getRoutes())\n          app[method].apply(app, [p].concat(controller.getRoutes()))\n\n\n\n\n\n\n\n\n"]}