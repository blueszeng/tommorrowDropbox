{"version":3,"sources":["baseinit.coffee"],"names":[],"mappings":"AAAA,IAAA;;AAAA,MAAA,GAAS,OAAA,CAAQ,aAAR;;AACT,IAAA,GAAO,OAAA,CAAQ,MAAR;;AAEP,EAAA,GAAK,MAAM,CAAC;;AACZ,IAAG,EAAE,CAAC,KAAN;EACE,SAAA,GAAY,OAAA,CAAQ,WAAR;EACZ,SAAA,GAAgB,IAAA,SAAA,CACd,EAAE,CAAC,KAAK,CAAC,QADK,EAEd,EAAE,CAAC,KAAK,CAAC,QAFK,EAGd,EAAE,CAAC,KAAK,CAAC,QAAT,CACE;IAAA,MAAA,EACE;MAAA,WAAA,EAAa,KAAb;MACA,eAAA,EAAiB,IADjB;MAEA,OAAA,EAAS,MAFT;MAGA,OAAA,EAAS,iBAHT;MAIA,UAAA,EAAY,KAJZ;KADF;IAMA,IAAA,EAAM,EAAE,CAAC,KAAK,CAAC,IANf;IAOA,oBAAA,EAAsB,GAPtB;IAQA,OAAA,EAAS,IART;GADF,CAHc;EAchB,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAhBF;CAAA,MAAA;EAkBE,OAAO,CAAC,GAAR,CAAY,sBAAZ,EAlBF;;;AAqBA,eAAA,GAAkB,SAAC,SAAD;AAChB,MAAA;EAAA,YAAA,GAAe,OAAA,CAAQ,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,SAAjB,EAA4B,EAAE,CAAC,WAA/B,EAA4C,SAAA,GAAY,MAAM,CAAC,UAA/D,CAAR;EACf,OAAA,GAAU;EACV,IAAG,YAAY,CAAC,SAAhB;IACE,OAAO,CAAC,SAAR,GAAoB,YAAY,CAAC;IACjC,OAAO,YAAY,CAAC,UAFtB;;EAGA,GAAA,GAAM,SAAS,CAAC,MAAV,CAAiB,SAAS,CAAC,OAAV,CAAkB,QAAlB,EAA4B,GAA5B,CAAjB,EAAmD,YAAnD,EAAiE,OAAjE;EACN,GAAG,CAAC,OAAJ,GAAc;SACd;AARgB;;AAclB,IAAG,EAAE,CAAC,OAAN;EACE,QAAA,GAAW,OAAA,CAAQ,UAAR;EACX,MAAA,GAAS,QAAQ,CAAC;EAKlB,QAAQ,CAAC,OAAT,CAAiB,0BAAjB;EACA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EARF;CAAA,MAAA;EAUE,OAAO,CAAC,GAAR,CAAY,yBAAZ,EAVF;;;AAYA,eAAA,GAAkB,SAAC,SAAD;AAChB,MAAA;EAAA,UAAA,GAAa,QAAQ,CAAC,KAAT,CAAe,SAAS,CAAC,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,CAAf,EACP,IAAA,MAAA,CAAO,OAAA,CAAQ,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,SAAjB,EAA4B,EAAE,CAAC,WAA/B,EAA4C,SAAA,GAAY,MAAM,CAAC,UAA/D,CAAR,CAAP,CADO;EAEb,UAAU,CAAC,OAAX,GAAqB;SACrB;AAJgB;;AAOlB,MAAM,CAAC,OAAP,GACE;EAAA,cAAA,EAAiB,eAAjB;EACA,cAAA,EAAiB,eADjB","file":"baseinit.js","sourceRoot":"/source/","sourcesContent":["config = require './../config'\npath = require 'path'\n\ndb = config.db\nif db.mysql\n  Sequelize = require 'sequelize'\n  sequelize = new Sequelize(\n    db.mysql.database\n    db.mysql.username\n    db.mysql.password\n      define:\n        underscored: false\n        freezeTableName: true\n        charset: 'utf8'\n        collate: 'utf8_general_ci'\n        timestamps: false\n      host: db.mysql.host\n      maxConcurrentQueries: 120\n      logging: true\n  )\n  console.log \"mysql connect..\"\nelse\n  console.log \"no configure mysql..\"\n\n\n_loadMySqlModel = (modelName) ->\n  model_config = require(path.join(config.base_path, db.db_dir_name, modelName + config.script_ext));\n  options = {}\n  if model_config.tableName\n    options.tableName = model_config.tableName\n    delete model_config.tableName\n  obj = sequelize.define(modelName.replace(/\\/|\\\\/g, '_'), model_config, options)\n  obj.db_type = 'sql'\n  obj\n\n\n\n\n\nif db.mongodb\n  mongoose = require 'mongoose'\n  Schema = mongoose.Schema\n#  mongoose.connect('mongodb://' + db.mongodb.user + ':' +db.mongodb.pass + '@'\n#                    + config.db.host + ':' + db.mongodb.port + '/'\n#                    + config.db.database, db.mongodb)\n\n  mongoose.connect('mongodb://localhost/user')\n  console.log \"mongoose connect..\"\nelse\n  console.log \"no configure mongoose..\"\n\n_loadMongoModel = (modelName) ->\n  MongoModel = mongoose.model(modelName.replace(/\\//g, '_'),\n    new Schema(require(path.join(config.base_path, db.db_dir_name, modelName + config.script_ext))));\n  MongoModel.db_type = 'mongodb'\n  MongoModel\n\n\nmodule.exports =\n  loadMySqlModel : _loadMySqlModel\n  loadMongoModel : _loadMongoModel\n\n"]}