{"version":3,"sources":["mysqlmodel.coffee"],"names":[],"mappings":"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","file":"mysqlmodel.js","sourceRoot":"/source/","sourcesContent":["BaseModel = require './basemodel'\nloadMySqlModel =  require './baseinit'.loadMySqlModel\nclass MysqlModel extends BaseModel\n  constructor: (modelName, modelType) ->\n   super modelName modelType loadMySqlModel\n  order: (order) ->\n   order_str = ''\n   for  i in order\n     order_str += i + ' ' + order[i] + ' '\n   @params.order = order_str\n\n  findAll: () ->\n   self = @\n   @action = (callback) ->\n     self.Model.findAll\n       where: self.params.where\n       limit: self.params.limit\n       offset: self.params.offset\n       attributes: self.params.fields\n       order: self.params.order\n       raw: self.params.raw\n     .then (data) ->\n       callback(null, data)\n     .catch (err) ->\n       callback(err)\n   @\n  findById: (id) ->\n   self = @\n   @action = (callback) ->\n     self.params.where = self.params.where || {}\n     self.params.where.id = id\n     self.Model.find\n       where: self.params.where\n       attributes: self.params.fields\n       order: self.params.order\n       raw: self.params.raw\n      .then (data) ->\n        callback(null, data)\n      .catch (err) ->\n        callback(err)\n   @\n  findByField: (field, value) ->\n   self = @\n   @action = (callback) ->\n     self.params.where = self.params.where || {}\n     self.params.where[field] = value\n     self.Model.find\n       where: self.params.where\n       attributes: self.params.fields\n       order: self.params.order\n       raw: self.params.raw\n     .then (data) ->\n       callback(null, data)\n     .catch (err) ->\n       callback(err)\n   @\n  count: () ->\n   self = @\n   @action = (callback) ->\n     self.Model.count\n       where: self.params.where\n     .then (count) ->\n       callback(null, count)\n     .catch (err) ->\n       callback(err)\n   @\n  add: (kv) ->\n    self = @\n    @action = (callback) ->\n      self.Model.create(kv)\n      .then () ->\n        callback(null, data)\n      .catch (err) ->\n        callback(err)\n    @\n  update: (kv) ->\n   self = @\n   @action = (callback) ->\n     if self.result\n       fields = k = v = null\n       fields = []\n       for k in data\n         v = data[k]\n         if self.Model.rawAttributes[k]\n           fields.push(k)\n       self.result.updateAttributes kv, fields\n       .then (data) ->\n         callback(null, data)\n       .catch (err) ->\n         callback(err)\n     else\n       self.Model.update(kv, self.params.where)\n       .catch () ->\n         callback()\n     @\n  delete: () ->\n    self = @\n    @action = (callback) ->\n      if self.result\n        self.result.destroy()\n        .then (data) ->\n          callback(null, data)\n        .catch (err) ->\n         callback(err)\n      else\n        self.Model.destroy self.params.where\n        .then () ->\n          callback()\n      @\n  addCount: (key) ->\n    self = @\n    @action = (callback) ->\n      if self.result\n        obj = {}\n        obj[key] = self.result[key] * 1 + 1\n        self.result.updateAttributes(obj, [key])\n        .then (data) ->\n          callback(null, data)\n        .catch (err) ->\n          callback(err)\n      else\n        callback(new Error('先调用findBy再调用addCount，please'))\n      @\nmodule.exports =\n  MysqlModel"]}